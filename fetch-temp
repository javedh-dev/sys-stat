#!/bin/bash

# Function to get CPU temperature
get_cpu_temp() {
    local cpu_temp=""
    local thermal_zones=$(ls /sys/class/thermal/thermal_zone*/type 2>/dev/null)
    if [ -n "$thermal_zones" ]; then
        for zone in $thermal_zones; do
            local type=$(cat "$zone")
            if [ "$type" == "x86_pkg_temp" ]; then
                local temp=$(cat "${zone/\/type/\/temp}" 2>/dev/null)
                if [ -n "$temp" ]; then
                    cpu_temp=$(echo "scale=2; $temp / 1000" | bc)
                    break
                fi
            fi
        done
    fi
    echo "$cpu_temp"
}

# Function to get disk and NVMe temperatures
get_disk_temp() {
    local disk_list=$(lsblk -o NAME,TYPE -d -n | grep -E 'disk|nvme' | awk '{print $1}')
    local temp_info=""
    for device in $disk_list; do
        local temp
        if [[ "$device" == *"nvme"* ]]; then
            temp=$(smartctl -a "/dev/$device" 2>/dev/null | grep "Temperature Sensor 1:" | awk '{print $4}')
        else
            temp=$(smartctl -a "/dev/$device" 2>/dev/null | grep "Temperature_Celsius" | awk '{print $10}')
        fi
        if [ -n "$temp" ]; then
            if [ -n "$temp_info" ]; then
                temp_info="$temp_info, "
            fi
            temp_info="$temp_info \"$device\": \"$temp\""
        fi
    done
    echo "$temp_info"
}

# Main function to generate JSON response
generate_json_response() {
    local cpu_temp=$(get_cpu_temp)
    local disk_temp=$(get_disk_temp)

    local json="{"
    if [ -n "$cpu_temp" ]; then
        json="$json \"cpu\": \"$cpu_temp\","
    fi
    if [ -n "$disk_temp" ]; then
        json="$json \"disk\": { $disk_temp }"
    fi
    json="$json }"

    echo "$json"
}

# Call the main function and output the JSON response
generate_json_response